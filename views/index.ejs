<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Descargar Videos de YouTube</title>
    <link rel="stylesheet" href="./style.css">
</head>
<body>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            background-color: #f9f9f9;
            color: #333;
            margin: 0;
            padding: 0;
        }

        .container {
            max-width: 500px;
            margin: 50px auto;
            padding: 20px;
            background: white;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
        }

        h1 {
            font-size: 24px;
            margin-bottom: 20px;
        }

        form {
            display: flex;
            flex-direction: column;
        }

        label {
            margin-bottom: 5px;
            font-weight: bold;
        }

        input, select, button {
            margin-bottom: 15px;
            padding: 10px;
            font-size: 16px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }

        button {
            background-color: #28a745;
            color: white;
            border: none;
            cursor: pointer;
        }

        button:hover {
            background-color: #218838;
        }

        #status {
            font-size: 14px;
            color: #555;
        }

        .video-info {
            margin-top: 20px;
        }

        .video-info img {
            width: 100%;
            max-width: 300px;
            border-radius: 8px;
        }

        .video-info p {
            font-size: 16px;
        }
    </style>
    <div class="container">
        <h1>Descargar Videos de YouTube musica pruebas Bak</h1>
        <form id="downloadForm">
            <label for="url">URL del video:</label>
            <input type="text" id="url" placeholder="https://www.youtube.com/watch?v=..." required>
            
            <button type="submit">Obtener Información</button>
        </form>

        <div id="videoInfo" class="video-info" style="display:none;">
            <h2 id="videoTitle"></h2>
            <img id="videoThumbnail" src="" alt="Miniatura del video">
            <p id="videoDuration"></p>
            <p id="videoSize"></p>
            <form id="downloadFormFinal">
                <label for="format">Formato:</label>
                <select id="format" required>
                    <option value="mp3">MP3</option>
                </select>
                <button type="submit">Descargar</button>
            </form>
        </div>

        <!-- Campo oculto para almacenar el título del video -->
        <input type="hidden" id="videoTitleInput">

        <p id="status"></p>
    </div>

<script>
    document.getElementById('downloadForm').addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const url = document.getElementById('url').value;
        const status = document.getElementById('status');
        const videoInfo = document.getElementById('videoInfo');

        status.textContent = "Cargando información del video...";

        try {
            const response = await fetch('/getVideoInfo', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ url })
            });

            if (!response.ok) throw new Error("Error al obtener la información");

            const data = await response.json();
            
            // Mostrar la información del video
            document.getElementById('videoTitle').textContent = data.title;
            document.getElementById('videoThumbnail').src = data.thumbnail;
            document.getElementById('videoDuration').textContent = `Duración: ${Math.floor(data.duration / 60)}:${data.duration % 60}`;

            // Actualizar el campo oculto con el título del video
            document.getElementById('videoTitleInput').value = data.title;

            videoInfo.style.display = 'block';
            status.textContent = "";
        } catch (error) {
            status.textContent = "Ocurrió un error: " + error.message;
        }
    });

    document.getElementById('downloadFormFinal').addEventListener('submit', async (e) => {
        e.preventDefault();

        const url = document.getElementById('url').value;
        const format = document.getElementById('format').value;
        const title = document.getElementById('videoTitleInput').value;

        const status = document.getElementById('status');
        status.textContent = "Procesando la descarga...";

        try {
            const response = await fetch('/download', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ url, format, title })
            });

            if (!response.ok) throw new Error("Error en el servidor");

            const blob = await response.blob();
            const downloadUrl = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = downloadUrl;
            a.download = `${title}.mp3`; // Siempre descargamos en formato mp3
            a.click();

            status.textContent = "Descarga completada.";
        } catch (error) {
            status.textContent = "Ocurrió un error: " + error.message;
        }
    });
</script>
</body>
</html>
